<div class="main-container">
  <div class="chat-container">
    <div id="chat-messages"></div>
  </div>

  <form id="ai-form" class="chat-form">
    <input 
      type="text" 
      id="question-input"
      placeholder="Ask me anything..." 
      autocomplete="off">
    <button type="submit">Ask AI</button>
  </form>
</div>

<style>
  .main-container {
    display: flex;
    flex-direction: column;
    height: 70vh;
    gap: 1rem;
    max-width: 1200px;
    margin: 0 auto;
    padding: 1rem;
  }

  .chat-container {
    flex: 1;
    background-color: white;
    border: 1px solid #ccc;
    border-radius: 8px;
    padding: 20px;
    overflow-y: auto;
    margin-bottom: 0;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }

  #chat-messages {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    min-height: 100%;
  }

  .chat-form {
    display: flex;
    gap: 1rem;
    padding: 1rem;
    background-color: white;
    border: 1px solid #ccc;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  }

  .chat-form input {
    flex: 1;
    padding: 1rem;
    font-size: 1rem;
    border: 1px solid var(--border);
    border-radius: var(--radius);
    box-sizing: border-box;
    outline: none;
  }

  .chat-form input:focus {
    border-color: var(--primary);
  }

  .chat-form button {
    padding: 1rem 2rem;
    font-size: 1rem;
    background-color: var(--primary);
    color: white;
    border: none;
    border-radius: var(--radius);
    cursor: pointer;
    transition: background-color 0.2s;
  }

  .chat-form button:hover {
    background-color: var(--primary-dark);
  }

  .message {
    padding: 1rem;
    border-radius: var(--radius);
    max-width: 80%;
    animation: fadeIn 0.3s ease-in-out;
  }

  .user-message {
    background-color: #e3f2fd;
    margin-left: auto;
    border-bottom-right-radius: 4px;
  }

  .ai-message {
    background-color: #f5f5f5;
    border-bottom-left-radius: 4px;
  }

  .thinking {
    display: flex;
    align-items: center;
    font-style: italic;
    color: #666;
    gap: 4px;
  }

  .dots {
    display: inline-block;
    position: relative;
    width: 20px;
    height: 20px;
  }

  .dots::after {
    content: '...';
    position: absolute;
    animation: dots 1.4s infinite;
    font-size: 20px;
    line-height: 10px;
  }

  @keyframes dots {
    0%, 20% { content: '.'; }
    40% { content: '..'; }
    60%, 100% { content: '...'; }
  }

  @keyframes fadeIn {
    from { opacity: 0; transform: translateY(10px); }
    to { opacity: 1; transform: translateY(0); }
  }

  /* Markdown Styling */
  .ai-message p {
    margin: 0 0 1rem 0;
  }

  .ai-message p:last-child {
    margin-bottom: 0;
  }

  .ai-message code {
    background-color: #f0f0f0;
    padding: 2px 4px;
    border-radius: 4px;
    font-family: monospace;
  }

  .ai-message pre {
    background-color: #f8f8f8;
    padding: 1rem;
    border-radius: 4px;
    overflow-x: auto;
  }

  @media (max-width: 768px) {
    .main-container {
      height: calc(100vh - 100px);
      padding: 0.5rem;
    }

    .chat-form {
      flex-direction: column;
    }
    
    .chat-form button {
      width: 100%;
    }

    .message {
      max-width: 90%;
    }
  }
</style>

<script>
  document.getElementById('ai-form').addEventListener('submit', async (event) => {
    event.preventDefault();
    
    const input = document.getElementById('question-input');
    const query = input.value.trim();
    const chatMessages = document.getElementById('chat-messages');
    
    if (!query) return;

    // Create user message
    const userMessage = document.createElement('div');
    userMessage.className = 'message user-message';
    userMessage.textContent = query;
    chatMessages.appendChild(userMessage);

    // Add thinking message
    const thinkingMessage = document.createElement('div');
    thinkingMessage.className = 'message ai-message';
    thinkingMessage.innerHTML = '<div class="thinking">Thinking<span class="dots"></span></div>';
    chatMessages.appendChild(thinkingMessage);

    // Auto scroll
    chatMessages.parentElement.scrollTo({
      top: chatMessages.scrollHeight,
      behavior: 'smooth'
    });

    try {
      const response = await fetch('/ask-ai', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ question: query })
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      const data = await response.json();

      // Remove thinking message
      chatMessages.removeChild(thinkingMessage);

      // Create AI response
      const aiMessage = document.createElement('div');
      aiMessage.className = 'message ai-message';
      aiMessage.innerHTML = data.response;
      chatMessages.appendChild(aiMessage);

      // Clear input
      input.value = '';
      
      // Auto scroll
      chatMessages.parentElement.scrollTo({
        top: chatMessages.scrollHeight,
        behavior: 'smooth'
      });

    } catch (error) {
      chatMessages.removeChild(thinkingMessage);
      console.error('Error:', error);
      
      // Create error message
      const errorMessage = document.createElement('div');
      errorMessage.className = 'message ai-message';
      errorMessage.innerHTML = '<p style="color: #dc3545;">Sorry, something went wrong. Please try again.</p>';
      chatMessages.appendChild(errorMessage);
    }
  });

  // Prevent form submission on Enter if Shift is not pressed
  document.getElementById('question-input').addEventListener('keydown', (event) => {
    if (event.key === 'Enter' && !event.shiftKey) {
      event.preventDefault();
      document.getElementById('ai-form').dispatchEvent(new Event('submit'));
    }
  });
</script>