<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Reset Password - Eventify</title>
  <link rel="stylesheet" href="/css/style.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="/js/toast.js"></script>
</head>
<body style="background:linear-gradient(135deg, #667eea 0%, #764ba2 100%);min-height:100vh;display:flex;align-items:center;justify-content:center;">
  <div class="container" style="max-width:400px;margin:2rem;">
    <div class="card" style="text-align:center;padding:2rem;">
      <div style="margin-bottom:2rem;">
        <h1 style="margin:0;color:var(--primary);font-size:2rem;">ðŸ”‘</h1>
        <h2 style="margin:0.5rem 0;color:var(--primary);">Reset Password</h2>
        <p style="color:var(--muted);margin:0;">Enter the OTP sent to your email and your new password</p>
      </div>
      
      <form action="/auth/reset-password" method="POST" id="resetPasswordForm">
        <div style="margin-bottom:1rem;">
          <label for="email" style="display:block;text-align:left;font-weight:600;margin-bottom:0.5rem;">Email Address</label>
          <input type="email" id="email" name="email" required 
                 style="width:100%;padding:0.75rem;border:1px solid var(--border);border-radius:var(--radius);box-sizing:border-box;"
                 placeholder="Enter your email address">
        </div>
        
        <div style="margin-bottom:1rem;">
          <label for="otp" style="display:block;text-align:left;font-weight:600;margin-bottom:0.5rem;">OTP Code</label>
          <input type="text" id="otp" name="otp" required 
                 style="width:100%;padding:0.75rem;border:1px solid var(--border);border-radius:var(--radius);box-sizing:border-box;text-align:center;font-size:1.2rem;letter-spacing:0.5rem;"
                 placeholder="000000" maxlength="6">
        </div>
        
        <div style="margin-bottom:1rem;">
          <label for="newPassword" style="display:block;text-align:left;font-weight:600;margin-bottom:0.5rem;">New Password</label>
          <input type="password" id="newPassword" name="newPassword" required 
                 style="width:100%;padding:0.75rem;border:1px solid var(--border);border-radius:var(--radius);box-sizing:border-box;"
                 placeholder="Enter new password">
        </div>
        
        <div style="margin-bottom:1.5rem;">
          <label for="confirmPassword" style="display:block;text-align:left;font-weight:600;margin-bottom:0.5rem;">Confirm Password</label>
          <input type="password" id="confirmPassword" name="confirmPassword" required 
                 style="width:100%;padding:0.75rem;border:1px solid var(--border);border-radius:var(--radius);box-sizing:border-box;"
                 placeholder="Confirm new password">
        </div>
        
        <button type="submit" class="btn btn-accent" style="width:100%;margin-bottom:1rem;">
          Reset Password
        </button>
      </form>
      
      <div style="border-top:1px solid var(--border);padding-top:1rem;">
        <p style="margin:0;color:var(--muted);font-size:0.875rem;">
          Didn't receive OTP? 
          <a href="/auth/forgot-password" style="color:var(--primary);text-decoration:none;font-weight:600;">Request again</a>
        </p>
        <p style="margin:0.5rem 0 0 0;color:var(--muted);font-size:0.875rem;">
          Remember your password? 
          <a href="/auth/login" style="color:var(--primary);text-decoration:none;font-weight:600;">Login here</a>
        </p>
      </div>
    </div>
  </div>

  <script>
  // Handle form submission and validation
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('resetPasswordForm');
    const newPassword = document.getElementById('newPassword');
    const confirmPassword = document.getElementById('confirmPassword');
    const otpInput = document.getElementById('otp');

    // Auto-format OTP input
    otpInput.addEventListener('input', function(e) {
      let value = e.target.value.replace(/\D/g, '');
      if (value.length > 6) value = value.slice(0, 6);
      e.target.value = value;
    });

    form.addEventListener('submit', function(e) {
      const email = document.getElementById('email').value.trim();
      const otp = otpInput.value.trim();
      const passwordValue = newPassword.value;
      const confirmPasswordValue = confirmPassword.value;

      // Validate email
      if (!email) {
        e.preventDefault();
        showError('Please enter your email address');
        return false;
      }

      if (!email.includes('@') || !email.includes('.')) {
        e.preventDefault();
        showError('Please enter a valid email address');
        return false;
      }

      // Validate OTP
      if (!otp) {
        e.preventDefault();
        showError('Please enter the OTP code');
        return false;
      }

      if (otp.length !== 6) {
        e.preventDefault();
        showError('Please enter a valid 6-digit OTP');
        return false;
      }

      // Validate password
      if (!passwordValue) {
        e.preventDefault();
        showError('Please enter a new password');
        return false;
      }

      if (passwordValue.length < 6) {
        e.preventDefault();
        showError('Password must be at least 6 characters long');
        return false;
      }

      // Validate password confirmation
      if (!confirmPasswordValue) {
        e.preventDefault();
        showError('Please confirm your password');
        return false;
      }

      if (passwordValue !== confirmPasswordValue) {
        e.preventDefault();
        showError('Passwords do not match');
        return false;
      }
    });
  });

  // Show error toast
  function showError(message) {
    if (typeof showToast !== 'undefined') {
      showToast(message, 'error');
    } else if (typeof Swal !== 'undefined') {
      Swal.fire({
        toast: true,
        position: 'top-end',
        icon: 'error',
        title: message,
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true
      });
    } else {
      alert(message);
    }
  }

  // Show success toast
  function showSuccess(message) {
    if (typeof showToast !== 'undefined') {
      showToast(message, 'success');
    } else if (typeof Swal !== 'undefined') {
      Swal.fire({
        toast: true,
        position: 'top-end',
        icon: 'success',
        title: message,
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true
      });
    }
  }
  </script>
</body>
</html>
